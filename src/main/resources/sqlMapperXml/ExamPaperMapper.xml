<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.mapper.ExamPaperMapper">
	
	<insert id="insertExamPaper"  useGeneratedKeys="true" keyProperty="id" parameterType="com.aaa.model.ExamPaper">
	  	insert into exam_paper (title,starttime,needtime,number,stage,type,state,creator,createtime) values (#{title},#{starttime},#{needtime},#{number},#{stage},#{type},#{state},#{creator},#{createtime})
	 </insert>
    <select id="selectExamPaperPage" resultType="Map" parameterType="Map">
        SELECT 
        t.id,t.title,t.starttime,t.needtime,t.number,t.stage,t.type,t.state,round(r.zscore/r.sum,2) avgscore,round(r1.passscore/r.sum,2) passrate,
        group_concat(u2.name)name,concat(o2.name,'--',o.name,'--',c.classname) classname
        from exam_paper t
        left join tbl_class c on t.classid=c.id

        left join tbl_user_class tuc on tuc.class_id=t.classid
        left join `user` u2 on u2.id=tuc.user_id

        left join organization o on c.orgid = o.id
        left join organization o2 on  o.pid=o2.id
        <!-- 获取试卷下的平均分和及格率 -->
        left join (select paperid,sum(score) zscore,count(id) sum from exam_record where state=1 group by paperid) r on r.paperid = t.id
		left join (select paperid, sum(score) passscore from exam_record where score>=60 and state=1 group by paperid) r1 on r1.paperid = t.id
        <where> <!-- c.graduate = 0 -->
            <if test=" graduate != null and graduate!=''">
                and c.graduate = #{graduate}
            </if>
        	<if test=" classid != null ">
        		and t.classid = #{classid}  
        	</if>
        	<if test=" orgids != null ">
                 and o.id in (#{orgids})
            </if>
            <if test=" title != null and title != '' ">
                and t.title like concat(concat('%',#{title}),'%')
            </if>
            <if test=" type != null ">
                 and t.type = #{type}
            </if>
            <if test=" creator != null and creator != 0 ">
              <!--and t.creator =#{creator}-->
                and tuc.user_id =#{creator}
            </if>
        </where>
        group by t.id
        order BY t.id desc
    </select>

    <select id="selectExamPaperPage1" resultType="Map" parameterType="Map">
        SELECT
        t.id,t.title,t.starttime,t.needtime,t.number,t.stage,t.type,t.state,round(r.zscore/r.sum,2) avgscore,round(r1.passscore/r.sum,2) passrate,
        concat(o2.name,'--',o.name,'--',c.classname) classname
        from exam_paper t
        left join tbl_class c on t.classid=c.id

    <!--    left join tbl_user_class tuc on tuc.class_id=t.classid
        left join `user` u2 on u2.id=tuc.user_id   -->

        left join organization o on c.orgid = o.id
        left join organization o2 on  o.pid=o2.id
        <!-- 获取试卷下的平均分和及格率 -->
        left join (select paperid,sum(score) zscore,count(id) sum from exam_record where state=1 group by paperid) r on r.paperid = t.id
		left join (select paperid, sum(score) passscore from exam_record where score>=60 and state=1 group by paperid) r1 on r1.paperid = t.id
        <where> <!-- c.graduate = 0 -->
            <if test=" graduate != null and graduate!=''">
                and c.graduate = #{graduate}
            </if>
        	<if test=" classid != null ">
        		and t.classid = #{classid}
        	</if>
        	<if test=" orgids != null ">
                 and o.id in (#{orgids})
            </if>
            <if test=" title != null and title != '' ">
                and t.title like concat(concat('%',#{title}),'%')
            </if>
            <if test=" type != null ">
                 and t.type = #{type}
            </if>
<!--            <if test=" creator != null and creator != 0 ">-->
<!--              &lt;!&ndash;and t.creator =#{creator}&ndash;&gt;-->
<!--                and tuc.user_id =#{creator}-->
<!--            </if>-->
        </where>
        order BY t.id desc
    </select>
    <!-- 查询在考试时间段试卷信息-->
    <select id="selectExamPaperByMap" parameterType="map" resultType="com.aaa.model.ExamPaper">
    	select e.* from exam_paper e 
			where
			 e.type = #{type}
			and e.state = #{state}
			and NOW() between e.starttime and date_add(e.starttime, interval e.needtime minute)
    </select>
    <select id="findExamPaperByMap" parameterType="map" resultType="com.aaa.model.ExamPaper">
    	select e.* from exam_paper e 
			left join student s on s.class_id = e.classid
			where e.id =#{id}  
			and  s.stuno = #{stuno}
			and s.phone = #{phone}
			and NOW() between e.starttime and date_add(e.starttime, interval e.needtime minute)
    </select>

    <select id="getExamPaperByMap" parameterType="map" resultType="com.aaa.model.ExamPaper">
    	select e.* from exam_paper e
			left join student s on s.class_id = e.classid
			where e.id =#{id}
			and  s.stuno = #{stuno}
			and s.phone = #{phone}
			and NOW() between e.starttime and date_add(e.starttime, interval e.needtime minute)
    </select>
    <insert id="insertPaperClass" parameterType="map">
        insert into paper_class (classid,paperid) values (#{classid},#{paperid})
    </insert>

    <insert id="duplicateExamPaper" parameterType="map">
        insert into paper_info(paperid,infoid)
        select #{eid},infoid from paper_info where paperid=#{pid}
    </insert>

    <select id="findAllPaper" resultType="com.aaa.model.ExamPaper">
    	select * from exam_paper ep where ep.id in(
            select pi2.paperid from paper_info pi2 group by pi2.paperid
        )
    </select>

</mapper>